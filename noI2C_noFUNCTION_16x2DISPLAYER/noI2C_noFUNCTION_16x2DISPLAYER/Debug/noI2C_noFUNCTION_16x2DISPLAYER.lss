
noI2C_noFUNCTION_16x2DISPLAYER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000030e  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000080  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  0000030e  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  0000033d  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000a8  00000000  00000000  0000034b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000127a  00000000  00000000  000003f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007ec  00000000  00000000  0000166d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005bd  00000000  00000000  00001e59  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000118  00000000  00000000  00002418  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000246  00000000  00000000  00002530  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004aa  00000000  00000000  00002776  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  00002c20  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  0000028c  0000028c  00000300  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002ca8  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.WRITE_LCD_Data 0000006e  000000f2  000000f2  00000166  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.WRITE_LCD_Commands 00000072  00000080  00000080  000000f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.lcdReturnHome 00000008  00000274  00000274  000002e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.lcdClear 00000008  0000027c  0000027c  000002f0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.lcdFunctionSet 00000050  00000160  00000160  000001d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.lcdDispCursBli 00000028  000001f2  000001f2  00000266  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.lcdShift 00000028  0000021a  0000021a  0000028e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.lcdGoToSecondLineBegin 00000008  00000284  00000284  000002f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.INITIALIZE_LCD_Commands 0000001c  00000242  00000242  000002b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.main    00000042  000001b0  000001b0  00000224  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.__dummy_fini 00000002  00000294  00000294  00000308  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.__dummy_funcs_on_exit 00000002  00000296  00000296  0000030a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.__dummy_simulator_exit 00000002  00000298  00000298  0000030c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.exit    00000016  0000025e  0000025e  000002d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text._Exit   00000004  00000290  00000290  00000304  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
   8:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
   c:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  10:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  14:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  18:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  1c:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  20:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  24:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  28:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  2c:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  30:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  34:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  38:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  3c:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  40:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  44:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  48:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  4c:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  50:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  54:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  58:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  5c:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  60:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>
  64:	0c 94 46 01 	jmp	0x28c	; 0x28c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <main>
  78:	0c 94 2f 01 	jmp	0x25e	; 0x25e <exit>

0000007c <_exit>:
  7c:	f8 94       	cli

0000007e <__stop_program>:
  7e:	ff cf       	rjmp	.-2      	; 0x7e <__stop_program>

Disassembly of section .text:

0000028c <__bad_interrupt>:
 28c:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.WRITE_LCD_Data:

000000f2 <WRITE_LCD_Data>:
void lcdShiftDispLef(){
	WRITE_LCD_Commands(0x07);
}
//tamam
void lcdGoToFirstLineBegin(){
	WRITE_LCD_Commands(0x80);
  f2:	9b b1       	in	r25, 0x0b	; 11
  f4:	9f 70       	andi	r25, 0x0F	; 15
  f6:	28 2f       	mov	r18, r24
  f8:	20 7f       	andi	r18, 0xF0	; 240
  fa:	92 2b       	or	r25, r18
  fc:	9b b9       	out	0x0b, r25	; 11
  fe:	95 b1       	in	r25, 0x05	; 5
 100:	91 60       	ori	r25, 0x01	; 1
 102:	95 b9       	out	0x05, r25	; 5
 104:	95 b1       	in	r25, 0x05	; 5
 106:	92 60       	ori	r25, 0x02	; 2
 108:	95 b9       	out	0x05, r25	; 5
 10a:	ef e3       	ldi	r30, 0x3F	; 63
 10c:	ff e1       	ldi	r31, 0x1F	; 31
 10e:	31 97       	sbiw	r30, 0x01	; 1
 110:	f1 f7       	brne	.-4      	; 0x10e <WRITE_LCD_Data+0x1c>
 112:	00 c0       	rjmp	.+0      	; 0x114 <WRITE_LCD_Data+0x22>
 114:	00 00       	nop
 116:	95 b1       	in	r25, 0x05	; 5
 118:	9d 7f       	andi	r25, 0xFD	; 253
 11a:	95 b9       	out	0x05, r25	; 5
 11c:	ef e3       	ldi	r30, 0x3F	; 63
 11e:	ff e1       	ldi	r31, 0x1F	; 31
 120:	31 97       	sbiw	r30, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <WRITE_LCD_Data+0x2e>
 124:	00 c0       	rjmp	.+0      	; 0x126 <WRITE_LCD_Data+0x34>
 126:	00 00       	nop
 128:	2b b1       	in	r18, 0x0b	; 11
 12a:	f0 e1       	ldi	r31, 0x10	; 16
 12c:	8f 9f       	mul	r24, r31
 12e:	c0 01       	movw	r24, r0
 130:	11 24       	eor	r1, r1
 132:	92 2f       	mov	r25, r18
 134:	9f 70       	andi	r25, 0x0F	; 15
 136:	89 2b       	or	r24, r25
 138:	8b b9       	out	0x0b, r24	; 11
 13a:	85 b1       	in	r24, 0x05	; 5
 13c:	82 60       	ori	r24, 0x02	; 2
 13e:	85 b9       	out	0x05, r24	; 5
 140:	8f e3       	ldi	r24, 0x3F	; 63
 142:	9f e1       	ldi	r25, 0x1F	; 31
 144:	01 97       	sbiw	r24, 0x01	; 1
 146:	f1 f7       	brne	.-4      	; 0x144 <WRITE_LCD_Data+0x52>
 148:	00 c0       	rjmp	.+0      	; 0x14a <WRITE_LCD_Data+0x58>
 14a:	00 00       	nop
 14c:	85 b1       	in	r24, 0x05	; 5
 14e:	8d 7f       	andi	r24, 0xFD	; 253
 150:	85 b9       	out	0x05, r24	; 5
 152:	ef e3       	ldi	r30, 0x3F	; 63
 154:	ff e1       	ldi	r31, 0x1F	; 31
 156:	31 97       	sbiw	r30, 0x01	; 1
 158:	f1 f7       	brne	.-4      	; 0x156 <WRITE_LCD_Data+0x64>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <WRITE_LCD_Data+0x6a>
 15c:	00 00       	nop
 15e:	08 95       	ret

Disassembly of section .text.WRITE_LCD_Commands:

00000080 <WRITE_LCD_Commands>:
  80:	2b b1       	in	r18, 0x0b	; 11
  82:	91 e0       	ldi	r25, 0x01	; 1
  84:	81 11       	cpse	r24, r1
  86:	01 c0       	rjmp	.+2      	; 0x8a <WRITE_LCD_Commands+0xa>
  88:	90 e0       	ldi	r25, 0x00	; 0
  8a:	2f 70       	andi	r18, 0x0F	; 15
  8c:	92 2b       	or	r25, r18
  8e:	9b b9       	out	0x0b, r25	; 11
  90:	95 b1       	in	r25, 0x05	; 5
  92:	9e 7f       	andi	r25, 0xFE	; 254
  94:	95 b9       	out	0x05, r25	; 5
  96:	95 b1       	in	r25, 0x05	; 5
  98:	92 60       	ori	r25, 0x02	; 2
  9a:	95 b9       	out	0x05, r25	; 5
  9c:	ef e3       	ldi	r30, 0x3F	; 63
  9e:	ff e1       	ldi	r31, 0x1F	; 31
  a0:	31 97       	sbiw	r30, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <WRITE_LCD_Commands+0x20>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <WRITE_LCD_Commands+0x26>
  a6:	00 00       	nop
  a8:	95 b1       	in	r25, 0x05	; 5
  aa:	9d 7f       	andi	r25, 0xFD	; 253
  ac:	95 b9       	out	0x05, r25	; 5
  ae:	ef e3       	ldi	r30, 0x3F	; 63
  b0:	ff e1       	ldi	r31, 0x1F	; 31
  b2:	31 97       	sbiw	r30, 0x01	; 1
  b4:	f1 f7       	brne	.-4      	; 0xb2 <WRITE_LCD_Commands+0x32>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <WRITE_LCD_Commands+0x38>
  b8:	00 00       	nop
  ba:	2b b1       	in	r18, 0x0b	; 11
  bc:	f0 e1       	ldi	r31, 0x10	; 16
  be:	8f 9f       	mul	r24, r31
  c0:	c0 01       	movw	r24, r0
  c2:	11 24       	eor	r1, r1
  c4:	92 2f       	mov	r25, r18
  c6:	9f 70       	andi	r25, 0x0F	; 15
  c8:	89 2b       	or	r24, r25
  ca:	8b b9       	out	0x0b, r24	; 11
  cc:	85 b1       	in	r24, 0x05	; 5
  ce:	82 60       	ori	r24, 0x02	; 2
  d0:	85 b9       	out	0x05, r24	; 5
  d2:	8f e3       	ldi	r24, 0x3F	; 63
  d4:	9f e1       	ldi	r25, 0x1F	; 31
  d6:	01 97       	sbiw	r24, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <WRITE_LCD_Commands+0x56>
  da:	00 c0       	rjmp	.+0      	; 0xdc <WRITE_LCD_Commands+0x5c>
  dc:	00 00       	nop
  de:	85 b1       	in	r24, 0x05	; 5
  e0:	8d 7f       	andi	r24, 0xFD	; 253
  e2:	85 b9       	out	0x05, r24	; 5
  e4:	ef e3       	ldi	r30, 0x3F	; 63
  e6:	ff e1       	ldi	r31, 0x1F	; 31
  e8:	31 97       	sbiw	r30, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <WRITE_LCD_Commands+0x68>
  ec:	00 c0       	rjmp	.+0      	; 0xee <WRITE_LCD_Commands+0x6e>
  ee:	00 00       	nop
  f0:	08 95       	ret

Disassembly of section .text.lcdReturnHome:

00000274 <lcdReturnHome>:
 274:	82 e0       	ldi	r24, 0x02	; 2
 276:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 27a:	08 95       	ret

Disassembly of section .text.lcdClear:

0000027c <lcdClear>:
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 282:	08 95       	ret

Disassembly of section .text.lcdFunctionSet:

00000160 <lcdFunctionSet>:
 160:	80 32       	cpi	r24, 0x20	; 32
 162:	19 f4       	brne	.+6      	; 0x16a <lcdFunctionSet+0xa>
 164:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 168:	08 95       	ret
 16a:	84 32       	cpi	r24, 0x24	; 36
 16c:	19 f4       	brne	.+6      	; 0x174 <lcdFunctionSet+0x14>
 16e:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 172:	08 95       	ret
 174:	88 32       	cpi	r24, 0x28	; 40
 176:	19 f4       	brne	.+6      	; 0x17e <lcdFunctionSet+0x1e>
 178:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 17c:	08 95       	ret
 17e:	8c 32       	cpi	r24, 0x2C	; 44
 180:	19 f4       	brne	.+6      	; 0x188 <lcdFunctionSet+0x28>
 182:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 186:	08 95       	ret
 188:	80 33       	cpi	r24, 0x30	; 48
 18a:	19 f4       	brne	.+6      	; 0x192 <lcdFunctionSet+0x32>
 18c:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 190:	08 95       	ret
 192:	84 33       	cpi	r24, 0x34	; 52
 194:	19 f4       	brne	.+6      	; 0x19c <lcdFunctionSet+0x3c>
 196:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 19a:	08 95       	ret
 19c:	88 33       	cpi	r24, 0x38	; 56
 19e:	19 f4       	brne	.+6      	; 0x1a6 <lcdFunctionSet+0x46>
 1a0:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 1a4:	08 95       	ret
 1a6:	8c 33       	cpi	r24, 0x3C	; 60
 1a8:	11 f4       	brne	.+4      	; 0x1ae <lcdFunctionSet+0x4e>
 1aa:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 1ae:	08 95       	ret

Disassembly of section .text.lcdDispCursBli:

000001f2 <lcdDispCursBli>:
 1f2:	8c 30       	cpi	r24, 0x0C	; 12
 1f4:	19 f4       	brne	.+6      	; 0x1fc <lcdDispCursBli+0xa>
 1f6:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 1fa:	08 95       	ret
 1fc:	8d 30       	cpi	r24, 0x0D	; 13
 1fe:	19 f4       	brne	.+6      	; 0x206 <lcdDispCursBli+0x14>
 200:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 204:	08 95       	ret
 206:	8e 30       	cpi	r24, 0x0E	; 14
 208:	19 f4       	brne	.+6      	; 0x210 <lcdDispCursBli+0x1e>
 20a:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 20e:	08 95       	ret
 210:	8f 30       	cpi	r24, 0x0F	; 15
 212:	11 f4       	brne	.+4      	; 0x218 <lcdDispCursBli+0x26>
 214:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 218:	08 95       	ret

Disassembly of section .text.lcdShift:

0000021a <lcdShift>:
 21a:	80 31       	cpi	r24, 0x10	; 16
 21c:	19 f4       	brne	.+6      	; 0x224 <lcdShift+0xa>
 21e:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 222:	08 95       	ret
 224:	84 31       	cpi	r24, 0x14	; 20
 226:	19 f4       	brne	.+6      	; 0x22e <lcdShift+0x14>
 228:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 22c:	08 95       	ret
 22e:	88 31       	cpi	r24, 0x18	; 24
 230:	19 f4       	brne	.+6      	; 0x238 <lcdShift+0x1e>
 232:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 236:	08 95       	ret
 238:	8c 31       	cpi	r24, 0x1C	; 28
 23a:	11 f4       	brne	.+4      	; 0x240 <lcdShift+0x26>
 23c:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 240:	08 95       	ret

Disassembly of section .text.lcdGoToSecondLineBegin:

00000284 <lcdGoToSecondLineBegin>:
}
//tamam
void lcdGoToSecondLineBegin(){
	WRITE_LCD_Commands(0xC0);
 284:	80 ec       	ldi	r24, 0xC0	; 192
 286:	0e 94 40 00 	call	0x80	; 0x80 <__data_load_end>
 28a:	08 95       	ret

Disassembly of section .text.INITIALIZE_LCD_Commands:

00000242 <INITIALIZE_LCD_Commands>:
void lcdShiftDispLef(){
	WRITE_LCD_Commands(0x07);
}
//tamam
void lcdGoToFirstLineBegin(){
	WRITE_LCD_Commands(0x80);
 242:	0e 94 3a 01 	call	0x274	; 0x274 <lcdReturnHome>
 246:	88 e2       	ldi	r24, 0x28	; 40
 248:	0e 94 b0 00 	call	0x160	; 0x160 <lcdFunctionSet>
 24c:	8e e0       	ldi	r24, 0x0E	; 14
 24e:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <lcdDispCursBli>
 252:	8c e1       	ldi	r24, 0x1C	; 28
 254:	0e 94 0d 01 	call	0x21a	; 0x21a <lcdShift>
 258:	0e 94 3e 01 	call	0x27c	; 0x27c <lcdClear>
 25c:	08 95       	ret

Disassembly of section .text.main:

000001b0 <main>:
#include "func_names.h"

int main(void)
{
	
	DDRD = 0xF0; //0b 1111 0000
 1b0:	80 ef       	ldi	r24, 0xF0	; 240
 1b2:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0x03; //0b 0000 0011
 1b4:	83 e0       	ldi	r24, 0x03	; 3
 1b6:	84 b9       	out	0x04, r24	; 4
	
	unsigned char A = 'D';
	unsigned char B = 'E';
	INITIALIZE_LCD_Commands();
 1b8:	0e 94 21 01 	call	0x242	; 0x242 <INITIALIZE_LCD_Commands>
	lcdGoToSecondLineBegin();
 1bc:	0e 94 42 01 	call	0x284	; 0x284 <lcdGoToSecondLineBegin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1c0:	2f ef       	ldi	r18, 0xFF	; 255
 1c2:	8f e0       	ldi	r24, 0x0F	; 15
 1c4:	97 e2       	ldi	r25, 0x27	; 39
 1c6:	21 50       	subi	r18, 0x01	; 1
 1c8:	80 40       	sbci	r24, 0x00	; 0
 1ca:	90 40       	sbci	r25, 0x00	; 0
 1cc:	e1 f7       	brne	.-8      	; 0x1c6 <main+0x16>
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <main+0x20>
 1d0:	00 00       	nop
	while(1){
		_delay_ms(800);
		WRITE_LCD_Data(A);
 1d2:	84 e4       	ldi	r24, 0x44	; 68
 1d4:	0e 94 79 00 	call	0xf2	; 0xf2 <WRITE_LCD_Data>
 1d8:	2f ef       	ldi	r18, 0xFF	; 255
 1da:	8f e0       	ldi	r24, 0x0F	; 15
 1dc:	97 e2       	ldi	r25, 0x27	; 39
 1de:	21 50       	subi	r18, 0x01	; 1
 1e0:	80 40       	sbci	r24, 0x00	; 0
 1e2:	90 40       	sbci	r25, 0x00	; 0
 1e4:	e1 f7       	brne	.-8      	; 0x1de <main+0x2e>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <main+0x38>
 1e8:	00 00       	nop
		//lcdGoToSecondLineBegin();
		//lcdShiftDispLef();
		_delay_ms(800);
		
		WRITE_LCD_Data(B);
 1ea:	85 e4       	ldi	r24, 0x45	; 69
 1ec:	0e 94 79 00 	call	0xf2	; 0xf2 <WRITE_LCD_Data>
 1f0:	e7 cf       	rjmp	.-50     	; 0x1c0 <main+0x10>

Disassembly of section .text.__dummy_fini:

00000294 <_fini>:
 294:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000296 <__funcs_on_exit>:
 296:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000298 <__simulator_exit>:
 298:	08 95       	ret

Disassembly of section .text.exit:

0000025e <exit>:
 25e:	ec 01       	movw	r28, r24
 260:	0e 94 4b 01 	call	0x296	; 0x296 <__funcs_on_exit>
 264:	0e 94 4a 01 	call	0x294	; 0x294 <_fini>
 268:	ce 01       	movw	r24, r28
 26a:	0e 94 4c 01 	call	0x298	; 0x298 <__simulator_exit>
 26e:	ce 01       	movw	r24, r28
 270:	0e 94 48 01 	call	0x290	; 0x290 <_Exit>

Disassembly of section .text._Exit:

00000290 <_Exit>:
 290:	0e 94 3e 00 	call	0x7c	; 0x7c <_exit>
