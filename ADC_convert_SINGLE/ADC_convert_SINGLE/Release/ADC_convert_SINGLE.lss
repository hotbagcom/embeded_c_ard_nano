
ADC_convert_SINGLE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000187  0000023b  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000c4  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  0000023b  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  0000026a  2**0
                  CONTENTS, READONLY
  4 .debug_info   000005f4  00000000  00000000  00000278  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000005a2  00000000  00000000  0000086c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000137  00000000  00000000  00000e0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000208  00000000  00000000  00000f45  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .text         00000002  00000178  00000178  0000022c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001150  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .text.__vector_21 0000000c  0000017a  0000017a  0000022e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .text.adc_init 00000016  00000162  00000162  00000216  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text.adc_pin_enable 00000018  00000114  00000114  000001c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text.adc_pin_sellect 00000012  0000012c  0000012c  000001e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.adc_convert 00000024  0000013e  0000013e  000001f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .data.adc_convert_done 00000001  00800100  00000186  0000023a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 16 .text.startup.main 0000003a  000000d2  000000d2  00000186  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .bss.convert  00000002  00800101  00800101  0000023b  2**0
                  ALLOC
 18 .text.__dummy_fini 00000002  0000010c  0000010c  000001c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__dummy_funcs_on_exit 00000002  00000112  00000112  000001c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.__dummy_simulator_exit 00000002  0000010e  0000010e  000001c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.exit    0000000e  000000c4  000000c4  00000178  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text._Exit   00000002  00000110  00000110  000001c4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	39 c0       	rjmp	.+114    	; 0x74 <__ctors_end>
   2:	00 00       	nop
   4:	b9 c0       	rjmp	.+370    	; 0x178 <__bad_interrupt>
   6:	00 00       	nop
   8:	b7 c0       	rjmp	.+366    	; 0x178 <__bad_interrupt>
   a:	00 00       	nop
   c:	b5 c0       	rjmp	.+362    	; 0x178 <__bad_interrupt>
   e:	00 00       	nop
  10:	b3 c0       	rjmp	.+358    	; 0x178 <__bad_interrupt>
  12:	00 00       	nop
  14:	b1 c0       	rjmp	.+354    	; 0x178 <__bad_interrupt>
  16:	00 00       	nop
  18:	af c0       	rjmp	.+350    	; 0x178 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	ad c0       	rjmp	.+346    	; 0x178 <__bad_interrupt>
  1e:	00 00       	nop
  20:	ab c0       	rjmp	.+342    	; 0x178 <__bad_interrupt>
  22:	00 00       	nop
  24:	a9 c0       	rjmp	.+338    	; 0x178 <__bad_interrupt>
  26:	00 00       	nop
  28:	a7 c0       	rjmp	.+334    	; 0x178 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	a5 c0       	rjmp	.+330    	; 0x178 <__bad_interrupt>
  2e:	00 00       	nop
  30:	a3 c0       	rjmp	.+326    	; 0x178 <__bad_interrupt>
  32:	00 00       	nop
  34:	a1 c0       	rjmp	.+322    	; 0x178 <__bad_interrupt>
  36:	00 00       	nop
  38:	9f c0       	rjmp	.+318    	; 0x178 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	9d c0       	rjmp	.+314    	; 0x178 <__bad_interrupt>
  3e:	00 00       	nop
  40:	9b c0       	rjmp	.+310    	; 0x178 <__bad_interrupt>
  42:	00 00       	nop
  44:	99 c0       	rjmp	.+306    	; 0x178 <__bad_interrupt>
  46:	00 00       	nop
  48:	97 c0       	rjmp	.+302    	; 0x178 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	95 c0       	rjmp	.+298    	; 0x178 <__bad_interrupt>
  4e:	00 00       	nop
  50:	93 c0       	rjmp	.+294    	; 0x178 <__bad_interrupt>
  52:	00 00       	nop
  54:	92 c0       	rjmp	.+292    	; 0x17a <__vector_21>
  56:	00 00       	nop
  58:	8f c0       	rjmp	.+286    	; 0x178 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	8d c0       	rjmp	.+282    	; 0x178 <__bad_interrupt>
  5e:	00 00       	nop
  60:	8b c0       	rjmp	.+278    	; 0x178 <__bad_interrupt>
  62:	00 00       	nop
  64:	89 c0       	rjmp	.+274    	; 0x178 <__bad_interrupt>
	...

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 01       	movw	r0, r2
  6c:	00 01       	movw	r0, r0
  6e:	86 01       	movw	r16, r12
  70:	01 01       	movw	r0, r2
  72:	03 80       	ldd	r0, Z+3	; 0x03

00000074 <__ctors_end>:
  74:	11 24       	eor	r1, r1
  76:	1f be       	out	0x3f, r1	; 63
  78:	cf ef       	ldi	r28, 0xFF	; 255
  7a:	d8 e0       	ldi	r29, 0x08	; 8
  7c:	de bf       	out	0x3e, r29	; 62
  7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
  80:	e8 e6       	ldi	r30, 0x68	; 104
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	40 e0       	ldi	r20, 0x00	; 0
  86:	17 c0       	rjmp	.+46     	; 0xb6 <__do_clear_bss+0x8>
  88:	b5 91       	lpm	r27, Z+
  8a:	a5 91       	lpm	r26, Z+
  8c:	35 91       	lpm	r19, Z+
  8e:	25 91       	lpm	r18, Z+
  90:	05 91       	lpm	r16, Z+
  92:	07 fd       	sbrc	r16, 7
  94:	0c c0       	rjmp	.+24     	; 0xae <__do_clear_bss>
  96:	95 91       	lpm	r25, Z+
  98:	85 91       	lpm	r24, Z+
  9a:	ef 01       	movw	r28, r30
  9c:	f9 2f       	mov	r31, r25
  9e:	e8 2f       	mov	r30, r24
  a0:	05 90       	lpm	r0, Z+
  a2:	0d 92       	st	X+, r0
  a4:	a2 17       	cp	r26, r18
  a6:	b3 07       	cpc	r27, r19
  a8:	d9 f7       	brne	.-10     	; 0xa0 <__do_copy_data+0x20>
  aa:	fe 01       	movw	r30, r28
  ac:	04 c0       	rjmp	.+8      	; 0xb6 <__do_clear_bss+0x8>

000000ae <__do_clear_bss>:
  ae:	1d 92       	st	X+, r1
  b0:	a2 17       	cp	r26, r18
  b2:	b3 07       	cpc	r27, r19
  b4:	e1 f7       	brne	.-8      	; 0xae <__do_clear_bss>
  b6:	e4 37       	cpi	r30, 0x74	; 116
  b8:	f4 07       	cpc	r31, r20
  ba:	31 f7       	brne	.-52     	; 0x88 <__do_copy_data+0x8>
  bc:	0a d0       	rcall	.+20     	; 0xd2 <main>
  be:	02 c0       	rjmp	.+4      	; 0xc4 <_etext>

000000c0 <_exit>:
  c0:	f8 94       	cli

000000c2 <__stop_program>:
  c2:	ff cf       	rjmp	.-2      	; 0xc2 <__stop_program>

Disassembly of section .text:

00000178 <__bad_interrupt>:
 178:	43 cf       	rjmp	.-378    	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.__vector_21:

0000017a <__vector_21>:
 17a:	8f 93       	push	r24
 17c:	81 e0       	ldi	r24, 0x01	; 1
 17e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 182:	8f 91       	pop	r24
 184:	18 95       	reti

Disassembly of section .text.adc_init:

00000162 <adc_init>:
 162:	ec e7       	ldi	r30, 0x7C	; 124
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	80 81       	ld	r24, Z
 168:	80 64       	ori	r24, 0x40	; 64
 16a:	80 83       	st	Z, r24
 16c:	ea e7       	ldi	r30, 0x7A	; 122
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	80 81       	ld	r24, Z
 172:	87 69       	ori	r24, 0x97	; 151
 174:	80 83       	st	Z, r24
 176:	08 95       	ret

Disassembly of section .text.adc_pin_enable:

00000114 <adc_pin_enable>:
 114:	ee e7       	ldi	r30, 0x7E	; 126
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	90 81       	ld	r25, Z
 11a:	21 e0       	ldi	r18, 0x01	; 1
 11c:	30 e0       	ldi	r19, 0x00	; 0
 11e:	01 c0       	rjmp	.+2      	; 0x122 <adc_pin_enable+0xe>
 120:	22 0f       	add	r18, r18
 122:	8a 95       	dec	r24
 124:	ea f7       	brpl	.-6      	; 0x120 <adc_pin_enable+0xc>
 126:	29 2b       	or	r18, r25
 128:	20 83       	st	Z, r18
 12a:	08 95       	ret

Disassembly of section .text.adc_pin_sellect:

0000012c <adc_pin_sellect>:
 12c:	ec e7       	ldi	r30, 0x7C	; 124
 12e:	f0 e0       	ldi	r31, 0x00	; 0
 130:	90 81       	ld	r25, Z
 132:	90 7f       	andi	r25, 0xF0	; 240
 134:	90 83       	st	Z, r25
 136:	90 81       	ld	r25, Z
 138:	89 2b       	or	r24, r25
 13a:	80 83       	st	Z, r24
 13c:	08 95       	ret

Disassembly of section .text.adc_convert:

0000013e <adc_convert>:
 13e:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 142:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 146:	80 64       	ori	r24, 0x40	; 64
 148:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 14c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 150:	88 23       	and	r24, r24
 152:	e1 f3       	breq	.-8      	; 0x14c <adc_convert+0xe>
 154:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 158:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	92 2b       	or	r25, r18
 160:	08 95       	ret

Disassembly of section .text.startup.main:

000000d2 <main>:
  d2:	80 ef       	ldi	r24, 0xF0	; 240
  d4:	8a b9       	out	0x0a, r24	; 10
  d6:	8f e3       	ldi	r24, 0x3F	; 63
  d8:	84 b9       	out	0x04, r24	; 4
  da:	43 d0       	rcall	.+134    	; 0x162 <adc_init>
  dc:	80 e0       	ldi	r24, 0x00	; 0
  de:	1a d0       	rcall	.+52     	; 0x114 <adc_pin_enable>
  e0:	80 e0       	ldi	r24, 0x00	; 0
  e2:	24 d0       	rcall	.+72     	; 0x12c <adc_pin_sellect>
  e4:	78 94       	sei
  e6:	2b d0       	rcall	.+86     	; 0x13e <adc_convert>
  e8:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <convert+0x1>
  ec:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <convert>
  f0:	8b b1       	in	r24, 0x0b	; 11
  f2:	1b b8       	out	0x0b, r1	; 11
  f4:	85 b1       	in	r24, 0x05	; 5
  f6:	15 b8       	out	0x05, r1	; 5
  f8:	2f ef       	ldi	r18, 0xFF	; 255
  fa:	8d e2       	ldi	r24, 0x2D	; 45
  fc:	92 e2       	ldi	r25, 0x22	; 34
  fe:	21 50       	subi	r18, 0x01	; 1
 100:	80 40       	sbci	r24, 0x00	; 0
 102:	90 40       	sbci	r25, 0x00	; 0
 104:	e1 f7       	brne	.-8      	; 0xfe <main+0x2c>
 106:	00 c0       	rjmp	.+0      	; 0x108 <main+0x36>
 108:	00 00       	nop
 10a:	ed cf       	rjmp	.-38     	; 0xe6 <main+0x14>

Disassembly of section .text.__dummy_fini:

0000010c <_fini>:
 10c:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000112 <__funcs_on_exit>:
 112:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

0000010e <__simulator_exit>:
 10e:	08 95       	ret

Disassembly of section .text.exit:

000000c4 <exit>:
  c4:	ec 01       	movw	r28, r24
  c6:	25 d0       	rcall	.+74     	; 0x112 <__funcs_on_exit>
  c8:	21 d0       	rcall	.+66     	; 0x10c <_fini>
  ca:	ce 01       	movw	r24, r28
  cc:	20 d0       	rcall	.+64     	; 0x10e <__simulator_exit>
  ce:	ce 01       	movw	r24, r28
  d0:	1f d0       	rcall	.+62     	; 0x110 <_Exit>

Disassembly of section .text._Exit:

00000110 <_Exit>:
 110:	d7 df       	rcall	.-82     	; 0xc0 <_exit>
